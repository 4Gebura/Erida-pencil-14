using System.Linq;
using System.Numerics;
using System.Text.RegularExpressions;
using Content.Client.Stylesheets;
using Content.Client.UserInterface.Controls;
using Content.Shared._Erida.Roadmap;
using Robust.Client.AutoGenerated;
using Robust.Client.Graphics;
using Robust.Client.UserInterface.Controls;
using Robust.Client.UserInterface.XAML;
using Robust.Shared.Prototypes;

namespace Content.Client._Erida.Roadmap;

[GenerateTypedNameReferences]
public sealed partial class RoadmapWindow : FancyWindow
{
    [Dependency] private readonly IPrototypeManager _prototypeManager = default!;

    public RoadmapWindow()
    {
        RobustXamlLoader.Load(this);
        WindowTitle.AddStyleClass(StyleBase.StyleClassLabelHeading);
        Stylesheet = IoCManager.Resolve<IStylesheetManager>().SheetSpace;
    }

    protected override void Opened()
    {
        base.Opened();
        LoadTasks();
    }

    private void LoadTasks()
    {
        Primary.DisposeAllChildren();
        LongRange.DisposeAllChildren();
        Idea.DisposeAllChildren();
        var tasks = _prototypeManager.EnumeratePrototypes<RoadmapTaskPrototype>().OrderBy<RoadmapTaskPrototype, int>(phase => phase.Order);

        foreach (var task in tasks)
        {
            var taskButton = new Button
            {
                Text = task.Name,
                ToolTip = task.Description,
                StyleClasses = { StyleBase.ButtonSquare },
                Margin = new Thickness(10, 10, 10, 0),
                HorizontalExpand = true,
                VerticalAlignment = VAlignment.Top
            };

            switch (task.Category)
            {
                case RoadmapCategories.Primary:
                    taskButton.ModulateSelfOverride = Color.FromHex("#4d3c3cff"); // Yeah, hardcode. Huli net?
                    Primary.AddChild(taskButton);
                    break;
                case RoadmapCategories.LongRange:
                    taskButton.ModulateSelfOverride = Color.FromHex("#3c3d31ff");
                    LongRange.AddChild(taskButton);
                    break;
                case RoadmapCategories.Idea:
                    taskButton.ModulateSelfOverride = Color.FromHex("#3d3d4bff");
                    Idea.AddChild(taskButton);
                    break;
            }
        }
    }
}

